<?xml version="1.0"?>
<launch>

  <!-- Namespace related -->
  <arg name="ns" />
  <arg name="port" />

  <!-- GDB functionality -->
  <arg name="debug" default="false" />
  <arg unless="$(arg debug)" name="launch_prefix" value="" />
  <!-- <arg     if="$(arg debug)" name="launch_prefix" value="gdbserver localhost:10000" /> -->
  <arg     if="$(arg debug)" name="launch_prefix" value="valgrind" />

  <arg name="prefix" default="" />
  <arg name="limited" default="false"/>

  <!-- robot model -->
  <include file="$(find manipulator_description)/launch/manipulator_h.launch">
    <arg name="limited" value="$(arg limited)"/>
  </include>

  <group ns="$(arg ns)">
    <param name="serial_port/name" value="$(arg port)" />

    <!-- Load hardware interface -->
    <node name="manipulator_hardware_interface" pkg="manipulator_driver" type="manipulator_driver" output="screen" launch-prefix="$(arg launch_prefix)">
    </node>
      <!-- <arg name="prefix" value="$(arg prefix)" /> -->

    <!-- Load controller settings -->
    <rosparam file="$(find manipulator_driver)/config/manipulator_controllers.yaml" command="load"/>

    <!-- spawn controller manager -->
    <node name="ros_control_controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
      output="screen" args="joint_state_controller" />

    <!-- load other controller -->
    <!-- <node name="ros_control_controller_manager" pkg="controller_manager" type="controller_manager" respawn="false" output="screen" args="load pos_based_pos_traj_controller" /> -->
    <node name="ros_control_controller_manager" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="joint_trajectory_controller" />

    <!-- Convert joint states to /tf tranforms -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>
  </group>

</launch>

